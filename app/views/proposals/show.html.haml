.event-info-bar
  .row
    .col-md-8
      .event-info.event-info-dense
        %strong.event-title= event.name
        - if event.start_date? && event.end_date?
          %span.event-meta
            %i.fa.fa-fw.fa-calendar
            = event.date_range
    .col-md-4.text-right.text-right-responsive
      .event-info.event-info-dense
        %span{:class => "event-meta event-status-badge event-status-#{event.status}"}
          CFP
          = event.status
        - if event.open?
          %span.event-meta
            CFP closes:
            %strong= event.closes_at(:month_day_year)

#proposal
  .proposal-actions-bar
    .row
      .col-md-offset-8.col-md-4.text-right
        - if proposal.has_speaker?(current_user)
          .clearfix
            - unless proposal.withdrawn? || proposal.accepted? || proposal.confirmed?
              = link_to edit_event_proposal_path(event_slug: event.slug, uuid: proposal), class: 'btn btn-primary' do
                %span.glyphicon.glyphicon-edit
                Edit
              -if proposal.has_reviewer_activity?
                = proposal.withdraw_button
              -else
                = link_to event_proposal_path, method: :delete, data: {confirm: 'This will delete your talk. Are you sure you want to do this? It can not be undone.'}, class: 'btn btn-warning', id: 'delete' do
                  %span.glyphicon.glyphicon-exclamation-sign
                  Delete Proposal

  .page-header.page-header-slim
    .row
      .col-md-8
        %h1= proposal.title
    .row
      .col-sm-6
        .proposal-info-bar
          .proposal-meta.proposal-description
            .proposal-meta-item
              %strong #{ 'Speaker'.pluralize(proposal.speakers.count) }:
              %span= proposal.speakers.collect { |speaker| speaker.name }.join(', ')
            .proposal-meta-item
              %strong Format:
              %span #{proposal.session_format_name}
            .proposal-meta-item
              %strong Track:
              %span #{proposal.track_name}
            -if proposal.tags.present?
              .proposal-meta-item
                %strong Tags:
                %span #{proposal.tags_labels}
      .col-sm-6.text-right
        .proposal-info-bar
          .proposal-meta.proposal-description
            .proposal-meta-item
              %strong Status:
              = proposal.public_state(small: true)
            .proposal-meta-item
              %strong Updated:
              %span #{proposal.updated_in_words}


  .row
    .col-md-8
      = render partial: 'proposals/contents', locals: { proposal: proposal }

      .proposal-section
        %h3.fieldset-legend Speaker Information
        .row
          .col-md-8
            = render proposal.speakers, withdraw: proposal.has_speaker?(current_user)

        .row
          .col-md-8
            - if (proposal.has_speaker?(current_user) && invitations.any?)
              %h4.control-label Invited Speakers
              - invitations.each do |invitation|
                .clearfix
                  %ul.invitation
                    %li
                      = invitation.state_label
                      = invitation.email
                      .pull-right
                        - if !invitation.declined?
                          = link_to 'Resend',
                            resend_invitation_path(invitation_slug: invitation.slug),
                            method: :post,
                            class: 'btn btn-xs btn-primary'
                        = link_to 'Remove',
                          invitation_path(invitation_slug: invitation.slug),
                          method: :delete,
                          class: 'btn btn-xs btn-danger',
                          data: {confirm: 'Are you sure you want to remove this invitation?'}

              %hr
            .new-speaker-invite
              - if proposal.has_speaker?(current_user)
                = link_to "Invite a Speaker", "#", class: "btn btn-success btn-xs speaker-invite-btn",
                  data: { toggle: "modal", target: "#new-speaker-invitation" },
                  id: "invite-new-speaker"
                %p.help-block You may invite other speakers to your proposal.

    - if proposal.has_speaker?(current_user)
      .col-md-4
        .widget.widget-card
          .widget-header
            %i.fa.fa-comments
            %h3= pluralize(proposal.public_comments.count, 'comment')
          .widget-content
            = render partial: 'proposals/comments',
              locals: { proposal: proposal, comments: proposal.public_comments }
        %p.help-block Have questions or feeback on your proposal? The comments allow you to anonymously converse with the review committee.

= render partial: 'proposals/speaker_invitations/new_dialog', locals: { event: event, proposal: proposal }
